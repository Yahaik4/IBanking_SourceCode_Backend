// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Services/Protos/Payment.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PaymentGrpc {
  public static partial class PaymentGrpcService
  {
    static readonly string __ServiceName = "Payment.PaymentGrpcService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PaymentGrpc.CreateTransactionRequest> __Marshaller_Payment_CreateTransactionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PaymentGrpc.CreateTransactionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PaymentGrpc.CreateTransactionReply> __Marshaller_Payment_CreateTransactionReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PaymentGrpc.CreateTransactionReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PaymentGrpc.GetTransactionHistoryRequest> __Marshaller_Payment_GetTransactionHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PaymentGrpc.GetTransactionHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PaymentGrpc.GetTransactionHistoryReply> __Marshaller_Payment_GetTransactionHistoryReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PaymentGrpc.GetTransactionHistoryReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PaymentGrpc.ConfirmTransactionRequest> __Marshaller_Payment_ConfirmTransactionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PaymentGrpc.ConfirmTransactionRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PaymentGrpc.CreateTransactionRequest, global::PaymentGrpc.CreateTransactionReply> __Method_CreateTransaction = new grpc::Method<global::PaymentGrpc.CreateTransactionRequest, global::PaymentGrpc.CreateTransactionReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTransaction",
        __Marshaller_Payment_CreateTransactionRequest,
        __Marshaller_Payment_CreateTransactionReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PaymentGrpc.GetTransactionHistoryRequest, global::PaymentGrpc.GetTransactionHistoryReply> __Method_GetTransactionHistory = new grpc::Method<global::PaymentGrpc.GetTransactionHistoryRequest, global::PaymentGrpc.GetTransactionHistoryReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTransactionHistory",
        __Marshaller_Payment_GetTransactionHistoryRequest,
        __Marshaller_Payment_GetTransactionHistoryReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PaymentGrpc.ConfirmTransactionRequest, global::PaymentGrpc.CreateTransactionReply> __Method_ConfirmTransaction = new grpc::Method<global::PaymentGrpc.ConfirmTransactionRequest, global::PaymentGrpc.CreateTransactionReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmTransaction",
        __Marshaller_Payment_ConfirmTransactionRequest,
        __Marshaller_Payment_CreateTransactionReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PaymentGrpc.PaymentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PaymentGrpcService</summary>
    [grpc::BindServiceMethod(typeof(PaymentGrpcService), "BindService")]
    public abstract partial class PaymentGrpcServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::PaymentGrpc.CreateTransactionReply> CreateTransaction(global::PaymentGrpc.CreateTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::PaymentGrpc.GetTransactionHistoryReply> GetTransactionHistory(global::PaymentGrpc.GetTransactionHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::PaymentGrpc.CreateTransactionReply> ConfirmTransaction(global::PaymentGrpc.ConfirmTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PaymentGrpcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateTransaction, serviceImpl.CreateTransaction)
          .AddMethod(__Method_GetTransactionHistory, serviceImpl.GetTransactionHistory)
          .AddMethod(__Method_ConfirmTransaction, serviceImpl.ConfirmTransaction).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PaymentGrpcServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PaymentGrpc.CreateTransactionRequest, global::PaymentGrpc.CreateTransactionReply>(serviceImpl.CreateTransaction));
      serviceBinder.AddMethod(__Method_GetTransactionHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PaymentGrpc.GetTransactionHistoryRequest, global::PaymentGrpc.GetTransactionHistoryReply>(serviceImpl.GetTransactionHistory));
      serviceBinder.AddMethod(__Method_ConfirmTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PaymentGrpc.ConfirmTransactionRequest, global::PaymentGrpc.CreateTransactionReply>(serviceImpl.ConfirmTransaction));
    }

  }
}
#endregion
